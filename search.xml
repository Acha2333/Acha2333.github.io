<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>面经（游戏策划）</title>
      <link href="/2022/07/25/%E9%9D%A2%E7%BB%8F%EF%BC%88%E6%B8%B8%E6%88%8F%E7%AD%96%E5%88%92%EF%BC%89/"/>
      <url>/2022/07/25/%E9%9D%A2%E7%BB%8F%EF%BC%88%E6%B8%B8%E6%88%8F%E7%AD%96%E5%88%92%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ol><li><p>在掌趣实习工作负责的内容？ </p><p>答：配置战令通行证和助力礼包，聊天系统优化方案和称号系统设计方案，</p></li><li><p>你在设计系统时候（比如称号系统），是从哪些角度方面考虑去设计的？</p><p>答：设计目的，称号包装（命名，美术风格），获取途径，属性加成（小属性，累加），与游戏内其他玩法，系统功能的联动</p></li><li><p>为什么喜欢玩SIM模拟经营类游戏（以摩尔庄园为例）</p><p>答：可以体验虚拟的田园生活，经营自己的店铺，扮演自己喜欢的角色，游戏内剧情也十分温馨有趣（从玩法，剧情世界观，体验感受回答）。</p></li><li><p>谈谈你对SLG类型游戏的理解？</p><p>SLG（策略类游戏），现一般指战争策略类游戏，分为即使战略和回合制战略</p><p>4要素：探索，扩张，发展，消灭（策略）</p></li><li><p>可以看到你的游戏经历中大部分是二次元类型游戏，为什么喜欢这类游戏？</p><p>自身小时候喜欢看动漫，对这种平面美术风格比较亲近，二次元游戏立绘比较精美；一些游戏的剧情设定和世界观框架比较吸引我；二次元游戏中角色人物都有对应的信息内容和语音，随着养成的提升，一些语音和信息会逐渐解锁，仿佛就像现实中的情侣交往一样，这种设计可以给玩家与角色的互动和情感交流的体验。（美术风格，剧情设定，养成玩法，体验）</p></li><li><p>为什么想要做游戏策划？</p><p>自己从小就比较喜欢玩游戏，玩过很多种类的游戏，自己会比较一些游戏的玩法内容。</p><p>想从事游戏行业，为国产游戏贡献一份自己的力量。</p><p>游戏公司内氛围比较好，大家都有共同的兴趣爱好，话题也比较聊得来。</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 型月游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity小狐狸游戏学习日记2</title>
      <link href="/2022/06/17/Unity%E5%B0%8F%E7%8B%90%E7%8B%B8%E6%B8%B8%E6%88%8F%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B02/"/>
      <url>/2022/06/17/Unity%E5%B0%8F%E7%8B%90%E7%8B%B8%E6%B8%B8%E6%88%8F%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B02/</url>
      
        <content type="html"><![CDATA[<p>Physics Material 2D:2D物理材质，在collider中添加可以设置其摩擦力</p><p>空中无限跳的问题：修改跳跃部分代码判定条件</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Input.GetButtonDown(<span class="string">&quot;Jump&quot;</span>) &amp;&amp; coll.IsTouchingLayers(ground))<span class="comment">//输入jump的跳跃键且碰撞体在地面上，才能进行跳跃</span></span><br><span class="line">&#123;</span><br><span class="line">    rb.velocity = <span class="keyword">new</span> Vector2(rb.velocity.x, jumpforce * Time.deltaTime);</span><br><span class="line">   anim.SetBool(<span class="string">&quot;jumping&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Unity的UI入门：Unity中所有UI元素（按钮，输入窗口，滑条等）都是基于Canvas（画布），是呈现UI元素的平台。</p><p>调用Unity UI元素：using UnityEngine.UI</p><p>将Cherry的显示数量固定在左上角：选中Cherry和Number的Text，在Rect Transform处，可以调整锁定的边界，可以将其锁定在左上角</p>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 学习日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity小狐狸游戏学习日记1</title>
      <link href="/2022/06/13/Unity%E5%B0%8F%E7%8B%90%E7%8B%B8%E6%B8%B8%E6%88%8F%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B01/"/>
      <url>/2022/06/13/Unity%E5%B0%8F%E7%8B%90%E7%8B%B8%E6%B8%B8%E6%88%8F%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<p>Collider2D：获取Collider组件，添加该组件可以进行碰撞检测  </p><p>LayerMasK：获取ground图层，使该图层为碰撞图层</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (rb.velocity.y &lt; <span class="number">0</span>)<span class="comment">//判断Y轴速度（跳跃速度）是否小于0</span></span><br><span class="line">&#123;</span><br><span class="line">    anim.SetBool(<span class="string">&quot;jumping&quot;</span>,<span class="literal">false</span>);<span class="comment">//关闭跳跃动画，开启下落动画</span></span><br><span class="line">    anim.SetBool(<span class="string">&quot;falling&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (coll.IsTouchingLayers(ground))<span class="comment">//掉落过程中碰到了ground（碰撞地面）</span></span><br><span class="line">&#123;</span><br><span class="line">    anim.SetBool(<span class="string">&quot;falling&quot;</span>,<span class="literal">false</span>);<span class="comment">//取消掉落动画，开启待机动画</span></span><br><span class="line">    anim.SetBool(<span class="string">&quot;idle&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修复了移动问题</p><p>原因：之前使用的小狐狸碰撞体为方形，而地面碰撞体也为方形，当小狐狸移动时自身方形碰撞体角会与Collider地面图层每个方块发生碰撞，如果没有锁定Z轴则会使人物产生翻滚。</p><p>解决：新加一个Circle Collider 2d，并将其添加到角色下方（BOX Collider不删除），使用2种Collider控制人物碰撞。</p><p>或者把player的Collider改为胶囊碰撞体（Capsule Collider 2D）</p><p>小技巧：在PlayerController中，使用private可以隐藏自己不想看到的组件，需要获取这些组件可以在Start（）函数中使用GetComponent获取</p><p>例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Rigidbody2D rb;<span class="comment">//隐藏Rigidbody2D和Animator</span></span><br><span class="line"><span class="keyword">private</span> Animator anim;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    rb = GetComponent&lt;Rigidbody2D&gt;();<span class="comment">//在Start函数中获取这两个组件</span></span><br><span class="line">    anim = GetComponent&lt;Animator&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cinemachine插件：能够追踪物体角色的视角，跟随其一起移动，并可以进行各种视角调整（例如视角范围，显示靠左靠右，调整角色黄点视焦位置等）</p>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 学习日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试文档</title>
      <link href="/2022/06/12/%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3/"/>
      <url>/2022/06/12/%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="w我是二次元"><a href="#w我是二次元" class="headerlink" title="w我是二次元"></a>w我是二次元</h3>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/06/11/hello-world/"/>
      <url>/2022/06/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
